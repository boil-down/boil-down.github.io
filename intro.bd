% v:beta
% author: Jan Bernitt

***[a4 rfc]

                                   Boildown


is a definite flexible 
 [[https://en.wikipedia.org/wiki/Lightweight_markup_language]]
that allows low complexity, low footprint implementations while maintaining a 
concise and regular markup.

The language is meant to be interpreted on client site by a "reader" program
wherefore it intentionally constrians what can be expressed without taking
away too much freedom.
Yet, this requires it to have quite a range of marks and style options as no
less constraint language can be used. 

1 Overview

[TODO]{Jan} a tabular overview


2 Text Formatting

Semantic markup uses single character marks:
? _emphasis_

? *strong emphasis*

? "title"

?  /alternative voice/ 

?  -inaccurate text- 

?  :term: 

? `code`, ```

? @Alt@, @@@, @T@

...one or more when nesting makes sense...

? base^superscript^
? ^a^^b^^ ^
? ^^b^a^ ^^

? base~subscript~
? ~a~~b~~ ~
? ~~b~a~~ ~

? a 'quote',
? a '' 'quote' within a quote'',
? a ' ''quote'' within a quote'

Stylistic markup uses two character marks:
? ``monospace``

? ==small caps==

? __underlined__


3 Text Highlighting

Colors are stylistic (two characters marks) `*::*_text_*::{*_color_*}*`:
? ::text::{orange}
? ::text::{#7FDBFF}

Annotations are semantic (one character marks) `*!*_text_*!{*_semantic_*}*`.

 A numeric annotation indicates a label:
? !label-1!{1}
? !label-2!{2}
? !label-3!{3}
? !label-4!{4}

? !label-5!{5}
? !label-6!{6}
? !label-7!{7}
? !label-8!{8}
? !label-9!{9}
? !label-10!{10}
? !label-11!{11}
? !label-12!{12}
? !label-13!{13}
? !label-14!{14}
? !label-15!{15}
? !label-16!{16}


4 Special Characters

Special punctuation marks:
? ...

? x --- y

? x -- y

HTML-entities can be used by name:
? &loz;


5 Text Layout
 
Manual line breaks are forced using `*\\*`:
? manual line \\ break
Otherwise new paragraphs start after blank lines or within a new block.

For manual page break a anterisk is added `*{{\\*}}*`:
? manual page \\* break

Line breaks opportunities can be marked using `*\-*`:
? along\-word\-that\-might\-break\-somewhere


6 Headings

 A line start starts with at least 6 spaces or tabs is a title:
?       Title

Parts, chapters and sections are numbered 
(and must be followed by a space and not end with a dot):
? 1 Chapter 1
? 2 Chapter 2
? 2.1 Section Foo
? 2.2 Section Bar

Or when using parts:
? I Part 1
? I.1 Chapter 1
? I.1.1 Section 1 in Chapter 1

The section numbers become anchors.

An appendix can used upper case letters that might be followed by a `*)*` but
must be followed by a space afterwards.
? A) Appendix A

 A unnumbered index like a bibliography can use `*_*` followed by a space:
? _ Bibliography
? _____ Bibliography _____

Single word headings with just letters and digits can also be used bare
? Bibliography

To specify the name of a headings anchor use `*{*_name_*}*`:
? 1.1 Heading {anchorname}

Headings are usual block elements to options can be used:

? 1 Chapter 1 [~>]


7 Quoting

Simple block quotes start with `*> *` (space!): 
? > a quote using
? > multiple lines

? > > double quoting...

Three or more right arrows `*>>>*` start a advanced quote block where options 
can be used, e.g. to preserve line wrapping:
? >>>[\\]
? a quote using
? multiple lines
? wrapping like 
? source
? >>>

Citation is defined by the option `*{*_source_*}*`:
? >>>{Me}
? Simple new stupidity
? >>>

Using minipages to position a cite footer.
? > [...] we fell that [...] 
? > kids would be lucky, 
? > if they are as well educated 
? > as we are, 
? > which is a terrible crime, 
? > because we ain't educated at all. 
? > We're only beginning to realize 
? > how little we know 
? > about the nature of reality.
? > ***{footer}[>]
? >  --- Russell Ackoff, 
? > "Speech on Systems"
? > ***


8 Separator Lines

Any line that does start with whitespace and just contains whitespace and 
at least 3 minus, plus or asterisks symbols is a separator line.

?      --------------

?  + - + - + - + - +

?  - - - - - - - - -

?    * * *   

?  **  * ** * ** * **

Separator lines are empty but proper blocks, styles can be used:

?  -------------[40%][<<][#000000]


9 Escaping

Text in-between double curly brackets `*{{{{}}*_text_*{{}}}}*` is not interpreted. 
? {{*plain* _text_}}

Escaped sections can be contained within inline elements.
? `{{*plain* _text_}}`
? *plain {{_text_}}*

To escape from blocks just indent the line by an additional space or tab.


10 Links

Links refer to other documents and are given as a pairs of `*[[*_url_ [_label_]*]]*`.
? [[/relative/url/ label]]

? [[http://example.com/ link text]]

? [[www.example.com label]]

The label is optional.
? [[/relative/url/]]

? [[http://dilbert.com/]]

 A relative URL not ending with a `/` and with no query or special characters in 
the path the label is shortened to the last segment of the path:
? [[/relative/url]]

 A link without any path or query is a wiki-style link where a `_` becomes a space
in the link text:
? [[WikiPage]]

? [[Wiki_Page]]

? [[A_Wiki_Page text]]

Texts can use markup as usual:

? [[WikiPage _text_]]

? _[[WikiPage text]]_


11 References

References are links to other sections within the same document.

 A reference to a heading uses `*^[*_no_*]*`:

? See chapter ^[2]

? See part ^[I]

? See section ^[I.1.1]

Alternativly a reference can be made by heading text `*^["*_heading_*"]*`:

? See ^["Separator Lines"]

 Other notes, like footnotes, are named with letters and digits `*^[*_name_*]*`:

? compare ^[FOO2016] ...


12 Notes

Notes are annotation blocks with the format `*[*_name_*]*`.
All following lines that are indented by at least 2 spaces or tabs belong to the footnote.
The most common note is a footnote. 

? [FOO2016] refers 
?   to
?   1. a name
?   2. something else

Notes are blocks and can have styles:

? [BAR2] something [`]


Note annotated with an editor `*{*_editor_*}*` are general notes (not footnotes). 
The name given than refers to a type like _Info_:
? [Info]:{Jan} explain notes

Alternativly a line start starts with just upper case letters folled by a `:` 
is a note too:
? INFO:{Jan} explain notes

If the editor is unimportant an asterisk `*[*_name_*{{]*}}*` can be used for general notes:
? [Obsolete]* \\ no longer valid...

? TODO: `*` is optional for `_NAME_:` 

13 Lists

Ordered lists start at the number of the first item given.
The number or letter has to followed by a dot and a space `_n_*. *`:
? 10. one
? #. two
? 4. three

`*#.*` can be used instead of an actual number or letter:
? #. one
? #. two

Equally lists can use lower-case letters `_a_*.*`:
? c. cesar
? d. delta
? #. eta

Or upper-case letters `_A_*.*`:
? A. Alpha
? #. Beta

And even roman numbers work, but here the lists have to start with `*I.*`

? I. one
? #. two
? #. three

In case of letters a specified item cannot have multiple letters. 
Instead the placeholder `*#.*` should be used.

Asterisk `*{{*}}* ` followed by a space are used for bullet lists.

? * one
? * other

Any content can be nested within an item. 
All content that should be nested has to be indented by 2 spaces and/or tabs
per level.

? 1. first item:
?   indent 2 to
?   continue
? 
?   next paragraph
? #. second item
?   a. start of a sublist
?   #. everything is 
?     indented 2 more spaces
?     ```
?     to contine the item
?     ```

 A line starting with a definition starts a definition block:

? :term:
?   description
? :another term:
?   more description
?   as usual indented
? 
? :last term:
?   1. this
?   2. that 


14 Listings

Three or more backticks `*{{```}}*` start a code listing:
? ```
? 1 * 2 * 3 = 6
? ```

An aseterixsk `*{{*}}*` following the backticks enables the advanced listing 
where the first character is used to indicate highlighting. 
 A `*!*` highlights the whole line. Any other character states the character
used to mark start and end of the text section to hightlight `*?*_section_*?*`:
? ```*
? ! 1 * 2 * 3 = 6
? x 1 + 2 + 3 = x6x
? ```

Options are used to give a list of keywords `*{*_wordlist_*}*`:
? ```{key word}
? Highlights the key words
? word by word
? ```

Three or more tilda `*{{~~~}}*` start listings that are samples:
? ~~~
? A sample 
? block
? ~~~


15 Images

Images are given in format `*( *_url_ [_title_]* )*`:
? ( bee.png a bee )

Images are blocks with [[#options options]], here to make the image float right:
? ( bee.png a bee )[~>]

 A gallery or _figure_ is done by a sequence of images, the caption `*((*_caption_*))*` is optional.
? (( bees        ))[<>]
? ( bee.png bee 1 )
? ( bee.png bee 2 )
? ( bee.png bee 3 )

If the caption isn't stated first, the caption goes below the images:
? ( bee.png  )
? (( a *bee* ))


16 Tables

Tables are meant for tabular information. 
 A line is either a row or a column; columns contain text, not blocks (use minipages for layout).
Each table row or column starts and ends with `*:*`.
 A new row is started using `*:..*...*..:*`:
? :..........:
? : TH col 1 :*
? : TH col 2 :*
? :..........:
? : TD col 1 :
? : TD col 2 :
? :..........:

Solid borders use `*|*` for `*:*` and `*-*` for `*.*`:

? |----------|
? | TH col 1 |*
? | TH col 2 |*
? |----------|
? | TD col 1 |
? | TD col 2 |
? |----------|

This can be mixed to just get certain borders:

? |----------|
? : TH col 1 |*
? | TH col 2 :*
? :..........:
? | TD col 1 :
? : TD col 2 |

Styles can be used to change border color or width:

? |----------|[bc--red bw-2]
? | TH col 1 |*
? | TH col 2 |*
? |----------|
? | TD col 1 |[bc--green]
? | TD col 2 |
? |----------|

Rows and columns can be span using the option `*{*_colspan_ [_rowspan_]*}*`:

? |----------|
? | TH col 12|*{2}
? |----------|
? | TD col 1 |{1 2}
? | TD col 2 |
? |----------|
? | TD col 2 |
? |----------|

 A caption can be added using `*::*_text_*::*` before or after the table body:

? :: caption ::
? |----------|
? | TH col 1 |*
? | TH col 2 |*
? |----------|
? | TD col 1 |
? | TD col 2 |
? |----------|


17 Edits

  Inline...
? --deleted text--

? ++added text++

Also semnatic annotation can be used, e.g. the predefined `spelling` or `grammar`:
? !wrong text!{spelling}
? !wrong text!{grammar}

 A block of removed content starts and ends with exactly three dashes `*{{---}}*`:
? ---
? deleted block
? ---

 A block that has been insered starts and ends with exactly three plus signs `*{{+++}}*`
? +++
? added block
? +++

The options set the change date `*{*_date_*}*`:

? +++{2016-04-01}
? Added 1.of April
? +++


18 Includes

Includes are just links with a hint for a reader that the target is meant to
be included in the document at the link position. 
The hint is done by adding an extra asterisk `*{{[[}}*_url_*{{]]*}}*` after the link:

? [[part.bd an include]]*

If a client does not include the link's target the link just has an extra class `bd-include`.

Includes can also be done for a range of lines `*{{[[}}*_file_*#L*_from_*-L*_to_*{{]]}}*`:

? [[part.bd#L2-L3 range include]]*

Includes can also target content between two headings `*{{[[}}*_file_*#S*_from_*-S*_to_*{{]]}}*`:

? [[dummy.bd#SI.1-SI.2]]*

However, includes are not allowed cross domain:

? [[http://example.com/part.bd]]*


19 Minipages

 A minipage is a generic container for page layout purposes.
It starts with three or more asterisk symbols `*{{***}}*+`. 
The end mark has to use as many asterisk symbols as the start mark.

? ***{aside}[bc--blue bw-2]
? ****[50%][bc--red bw-2][<~]
? another page within a page
? ****
? ****[50%][bc--green bw-2][~>]
? and another one besides
? ****
? and back in the outer minipage
? ***

Nesting can be done by using more asterisk symbols for deeper nested blocks or
the other way around by using the most symbols for the most outer block.

The option can be used to state the type of the block, `*{*_type_*}*`.
The types `address`, `article`, `aside`, `details`, `figcaption`, `figure`, 
`footer`, `header`, `menu`, `nav` and `section` are rendered as tags. 
All other types become a CSS `class`.

As blocks cope with missing end marks one can start a document with a minipage
that is never closed to apply options to the whole document.


20 Templates
Templates have two parts:
1. The template (uses `*$*_n_` for placeholders)
2. Data rows (values spearated by `*;*`)

 A simple template for a list would look like this:
? ==============
? #. *$1*: _$2_
? ==============
? Foo; Bar
? Baz; Que
? ==============

 A fix parts before or after the template that is repeated for every data row
are prefixed with a `*= *` (space!). Lines that are before the template are
once before all rows, those after once after all rows.

? ==========
? = :...........:
? = : X         :*
? = : Y         :*
? :...........:
? : $1 :
? : $2 :
? = |-----------|
? = | *sum*     :
? = : x         |
? = |-----------|
? ==========
? Foo; Bar
? Baz; Que
? ==========


21 Documentation

Boildown has two build in blocks to document or debug itself.

The markup is prefixed with `*? *` (space!) to show markup and output
side by side as an example. 
? ? _foo_
? ? *bar*

The markup is prefixed with `*! *` (space!) to show markup and html output
side by side.
? ! _foo_
? ! _bar_


22 Troubleshooting
Evaluating the inline markup is not sequential from left to right.
It is a sequence of different replacements applied to the whole line.
Therefore there are unexpected results:

? `*a` b `c*`
? *`d* e *f`*

When the same markup relevant character is used at least twice without it 
being meant as markup it has to be escaped.

? `{{*}}a` b `c*`
? *`d* e *f{{`}}*


23 Collections

Collections are lists of data-rows.
Instead of providing explicit data-rows for ^["Templates"] the named collection 
provides the row data. 

The `heading` collection, that collects all headings within the document can
be used to generate a "Table of Contents":
? _ Table of Contents _
? ======={heading}
? = :........:
? : $3<<*^[$$]*>> :[>]
? : ^["$4"] :
? :.........:
? =======
